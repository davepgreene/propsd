#!/usr/bin/env node
'use strict';

/**
 * Poll Conqueso and propsd to test for interface inconsistencies
 */
const HTTP = require('http');
const ONE_MINUTE = 60000;

function requestProperties(uri, callback) {
  console.log('Polling ' + uri);
  const req = HTTP.get(uri, (res) => {
    res.setEncoding('utf8');

    let data = '';

    res.on('data', (d) => {
      data += d;
    });

    res.on('error', callback);

    res.on('end', (d) => {
      if (d) data += d;
      callback(null, data.split(/\n/g));
    });
  });

  req.on('error', callback);
}

function compareProperties(a, b) {
  a = a.sort(); // eslint-disable-line no-param-reassign
  b = b.sort(); // eslint-disable-line no-param-reassign

  const difference = {
    added: [],
    removed: []
  };

  for (let i = 0; i < b.length; i++) {
    if (!~(a.indexOf(b[i]))) { // eslint-disable-line no-bitwise
      difference.added.push(b[i]);
    }
  }

  for (let j = 0; j < a.length; j++) {
    if (!~(b.indexOf(a[j]))) { // eslint-disable-line no-bitwise
      difference.removed.push(a[j]);
    }
  }

  return difference;
}

function different(difference) {
  return difference.added.length > 0 || difference.removed.length > 0;
}

const CONQUESO = process.argv[2];
const PROPSD = 'http://localhost:9100/v1/conqueso';

(function poll() {
  requestProperties(CONQUESO, (err0, conqueso) => {
    if (err0) {
      console.error(err0);
    }

    requestProperties(PROPSD, (err1, propsd) => {
      if (err1) {
        console.error(err1);
      }

      const diff = compareProperties(conqueso, propsd);

      if (!different(diff)) {
        return console.log('Properties are identical');
      }

      console.log('Properties are not identical!');
      diff.added.forEach((p) => {
        console.log(`  + ${p}`);
      });

      diff.removed.forEach((p) => {
        console.log(`  - ${p}`);
      });
    });
  });

  setTimeout(poll, ONE_MINUTE);
}());
