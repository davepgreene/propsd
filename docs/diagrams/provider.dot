strict digraph {
  s_created [label="State: CREATED"; shape=box];

  subgraph {
    rank=same;

    i_initialize [label="#initialize()"];
    p_initialized [label="Promise: initialized"];
  }

  subgraph {
    rank=same;

    s_initializing [label="State: INITIALIZING"; shape=box];
    e_initialized [label="Event: initialized"];
  }


  subgraph {
    rank=same;

    _update [label="#_update(<data>|NO_UPDATE)"; group=running];
    _update_no_exist [label="#_update(NO_EXIST)"; group=waiting];
    _error [label="#_error(Error)"; group=error];
  }

  subgraph {
    rank=same;

    s_running [label="State: RUNNING"; shape=box; group=running];
    s_waiting [label="State: WAITING"; shape=box; group=waiting];
    s_error [label="State: ERROR"; shape=box; group=error];
  }

  shutdown [label="#shutdown()"];
  Shutdown [label="SHUTDOWN"; shape=box];

  s_created -> i_initialize -> s_initializing;
  s_initializing -> e_initialized;
  i_initialize -> p_initialized [label="returns"];
  e_initialized -> p_initialized [label="resolves"];

  {s_initializing s_running s_waiting s_error} -> _update -> s_running;
  {s_initializing s_running s_waiting s_error} -> _update_no_exist -> s_waiting;
  {s_initializing s_running s_waiting s_error} -> _error -> s_error;
  {s_initializing s_running s_waiting s_error} -> shutdown -> Shutdown;
}
